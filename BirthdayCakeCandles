package com;

import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.Arrays;
import java.util.List;
import java.util.function.Supplier;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public class BirthDayCakeCandles {

    public static void main(String[] ar) throws Exception {
        List<Integer> candles = Arrays.asList(4, 4, 1, 3, 5, 4, 6, 5);
//        birthdayCakeCandles(candles);
        readFromFile();
    }

    public static void readFromFile() throws Exception {
        Stream<String> stream = Files.lines(Paths.get("C:\\test1.txt"));
//       List<Integer> candles = stream.map(i-> i.replaceAll("\\s+$", "").split(" "));
        List<String[]> candles = stream.map(i -> i.replaceAll("\\s+$", "").split(" ")).collect(Collectors.toList());
        List<String> totalCandles = candles.stream().flatMap(list -> Stream.of(list)).collect(Collectors.toList());
        List<Integer> totalCandlesInt = totalCandles.stream().map(i -> Integer.parseInt(i)).collect(Collectors.toList());
//       totalCandlesInt.forEach(System.out::println);
        birthdayCakeCandles(totalCandlesInt);


    }

    public static int birthdayCakeCandles(List<Integer> candles) {

        Supplier<Stream<Integer>> candlesStreamSupplier = () -> candles.stream();
        Integer max = candlesStreamSupplier.get().mapToInt(v -> v).max().getAsInt();
        Integer count = new Long(candlesStreamSupplier.get().filter(i -> i.equals(max)).count()).intValue();
        System.out.println(count);
        return count;
    }
}
